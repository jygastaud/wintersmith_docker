{"name":"Wintersmith docker","tagline":"Expose Wintersmith static site generator preview server into a docker","body":"wintersmith_docker\r\n==================\r\n\r\nExpose Wintersmith static site generator (http://wintersmith.io) preview (which use a nodejs server) into a docker.\r\n\r\nCurrently, this is just a short try of playing with docker.\r\n\r\n## Method 1 : Vagrant\r\n\r\n### Pre-requis\r\nVagrant and Virtualbox installed in your local device.\r\n\r\n### Let the magic happend\r\n\r\nInto the root directory of the project, run \r\n```\r\nvagrant up\r\n```\r\n\r\nThat will use the setup.sh file include into settings directory and\r\n* built an Ubuntu VM (using the Vagrantfile)\r\n* installed [Docker.io](http://docker.com) using the Dockerfile\r\n* run Nodejs server with [Wintersmith](http://wintersmith.io) new default site\r\n\r\n### Try it\r\nOnce everything run, you should be able to acces your website via ```http://localhost:8123```\r\n\r\n## Method 2 : Docker\r\n\r\n### Pre-requis\r\n[Docker.io](http://docker.com) installed in your local device.\r\n\r\n### Build an Image with Nodejs and Wintersmith included.\r\n```\r\ndocker build -t jygastaud/wintersmith .\r\n```\r\n\r\nYou can now use wintersmith CLI on container run.\r\n\r\n### Examples\r\n\r\n#### Case 1\r\nYou **already have files** generated by wintersmith\r\n\r\nJust run the following command in your terminal:\r\n```\r\nsudo docker run -v ${PWD}/www/<website root folder>:/www/<website root folder> -w /www/<website root folder> --name wintersmtih_preview -p 8123:8080 -d jygastaud/wintersmith preview\r\n```\r\n\r\n#### Case 2\r\nYou want to **generate** a site with wintersmith\r\n\r\n##### Build a data container\r\n```\r\ndocker run --rm --name wintersmtih_build -w /www -d jygastaud/wintersmith new <website root folder>\r\n```\r\n\r\n##### Use Volume from data container as\r\n```\r\ndocker run --volumes-from=wintersmtih_build -w /www/<website root folder> --name wintersmtih_preview -p 8123:8080 -d jygastaud/wintersmith preview\r\n```\r\n\r\n##### Copy files from container\r\nCurrently, there is no simple and quick solution to copy the folder generated into the data container.\r\nIt should not work until [that issue](https://github.com/docker/docker/issues/1992) is open.\r\n\r\n###### Current workaround\r\nWe recommand the [install and use nsenter](https://github.com/jpetazzo/nsenter#how-do-i-install-nsenter-with-this) to create a tar file outside de mount volume and be able to get it via the \"docker cp\" command.\r\n\r\n```\r\nnsenter --target $PID --mount --uts --ipc --net --pid -- /bin/bash -c \"tar -cvzf /<archive name>.tar /www/<website root folder>\"\r\n```\r\nthen, copy the file generated.\r\n\r\n```\r\ndocker cp wintersmtih_build:/www/<website root folder> <local path>\r\n```\r\n\r\n###### Futurs solutions\r\n```\r\ndocker run --volumes-from=wintersmtih_build -v ${PWD}/www/site:/www/website -w /www/website --name wintersmtih_preview -p 8123:8080 -d jygastaud/wintersmith preview\r\n```\r\n\r\nOR\r\n\r\n```\r\ndocker cp wintersmtih_build:/www/<website root folder> <local path>\r\n```\r\n\r\n### Try it\r\nOnce everything run, you should be able to acces your website via ```http://localhost:8123```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}